-------------------------------------------------------------------
topic jadid ---> a new app ---> type script and axios for our request

how to start a typescript-react project
type script --> adds static typing so our variables are going to have types , this prevents runtime errors 
it moves the errors to compoile time errors 
alabte mishe ye react application e ke az ghabl darish ro behesh typescript ezaf kuni
vali sade tar ine ke az hamoon aval type script ro ba react shoro kuni

dar internet boror be site --> https://create-react-app.dev/docs/adding-typescript/
boro to folder React et va bezan --> npx create-react-app cryptocurrencies --template typescript

age negah kuni ye seri tafavotha hast ---> react-app-env.d.ts ro negah kuni mibini
file haye reportWebVitals.ts va setupTests.ts ro pak kun chun test nemikhaym anjam bedim
App.test ro ham pak kun
logo.svg ro pak kun

tsconfig.json ---> config your typescrpt rules

dar kul alan deghat kuni filehaye javascript alan be format e .tsx taghir kardan
dar App.css content esho pak kun
dar App.tsx ham logo import shode ro pak kun

dar index.tsx ham reportWebVitals va entehaye khat ro pak kun va comment haye balasho

dar App.tsx ham harchi toye div hast ro pak kun va tosh benvis hello
hala bezan npm start ta run she albate age ye react app dg ham ghablesh run bashe warning mide ke aya mikhay toye ye port dg run kunam ya na

hala ye typescript app dari!!

hala axios ro ham mikhaym use kunim --> axios is another way to make request ---> shabih fetch hast vali clean tar hast
install axios -> npm install axios
import axios from 'axios'

make a request to API ---> good crypto currency api without key is https://www.coingecko.com/ --> felan ke api key nemikhan va khoobe azash use kunim 
vase use kardan az API esh coingecko api documnetation ro search kun
masalan dar ghesmate simple drop down ro baz kun va az ghesmate ---> ids bede ke az coins/list oon id haro bayad peyda kuni --> masalan bede "bitcoin"
bad compare to "usd" bezan --> bad execute ro bezan
ye hamchin response e daryaf mikuni
{
  "bitcoin": {
    "usd": 17008.48
  }
}

in url ---> https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd --> in url ro ham ke balash behet dade dar browser bezani hamin json bala ro neshoon mide


alabte list of coins behtare yani boro dar section coins va list vared kun --> dovomi ro try kun alabte chun avali hame coin haro migire ke kheili tool mikeshe
dar dovomi mitoni set kuni 100 ta dade masalan begiri
https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false



  let url= 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false'; // Type infer mishe be string!
  url = 5; //ERROR mide chun be string ke nemishe addad dad --> pas typescrpipt khoobe chun predictable behaviour dare



farghe axios ba fetch
axios.get(url).then((response)=>{
    console.log(response.data) ;  // dg mesle fetch nist ke return response.json() kuni va bad dar then e dovom azash use kuni ---> haminja mostaghi response.data() ro migiri
})


undefined --> variable has no value
null --> null is a value which is nothing

dar App.tsx age ternary cryptos ? ro nazari typescript gir mide mige momkene null ya undefined bashe value zeman typescript be name e property ha gir mide pas khoobe bayad daghigh benvisi

------------------------------
creating a compoent with typescript

az in site use kun ---> https://react-typescript-cheatsheet.netlify.app/


alana dar CryptoSummary dg --> export default function CryptoSummary(props)  --> injoori dg error mide mige props implicitly type esh any hast
mishe inkaro kard ta error bere:
export default function CryptoSummary(props: any) --> ke begim props mitone harchizi bashe vali hadaf az typescript in nist!!!
rah hal dorost ine ke destructure kunim va jaye inke props ro begirim crypto object ro kamel begirim
ye new type ham dorost mikunim be name AppProps
nokte ine --> DEFINE WHAT YOU EXPECT --> 

expect mikunim ke ye crypto az type e object biad.. ama aya dorste ini ke paeen neveshtim?

export type AppProps = {
    crypto: object
}

no dorost nist ---> chun jense crypto object nist balke oon type ee hast ke dar App.tsx tarif kardim yani Crypto
pas in doroste:

export type AppProps = {
    crypto: Crypto
}

Crypto ham bayad import beshe

hala ke {crypto} ro dari destructure  mikuni exact property ro migiri


nokte jaleb tar dar typescript ham ine ke mitoni return type ro ham define kune ba gozashtan colon bad az input e function
chizi ke alan return mikunim JSX.Element hast --> dorost nanvisi error mide

dar kul vali caleb mige return type define kardan vase compoent helpful nist pas age mikhay bezaresh vali niazi nist


zeman ma in type hayee ke ijad kardim rota alan inline neveshtim vali behtare bebarim toye ye file dg benvisim
albate hamashono niar on to masalan dar CryptoSummary.tsx type e ke oon to hast specific hast vase khodesh
vali age az ye type kheili jaha use mikuni bezar oon to
kholase tamame type haye generaleto bezar to Types.tsx


What about interfaces??? --> dar cheat sheet site e react bebin
dar in page https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/basic_type_example bia paeen negah kun section e Types or interfaces ro :
rule ine ---> use interfaces util you need types
bad mige consider using types for your react components props and states for consistency because its more constrained
ma ham vase hamin az type dar component use kardim
------------------------------------------------------

lets have a drop down instead of a list of coins in the page
contnent of the drop down comes from the API 

az tag a select va option use mikunim va attrbiute key va value midim ---> key vase react use mishe chun age nadi react warning mide ke each props should have a unique id
value ham mige chi clickc shode va target value ro to onChange hala dastrasi dari behesh


agar vase option attribute value nazari e.targe.value chi mire tosh ? mohtaviate tag e option ke alan crypto.name hast mire tosh


in -->  <CryptoSummary crypto={selected} /> --> dar App.tsx error mide ama in na --->  {selected? <CryptoSummary crypto={selected} /> : null}


-----------------------------------
Display a chart for crypto currency
make a request to get historical data 
package chart.js hast -->https://www.chartjs.org/
va wrapper roye react ham dare ke az in use mikunim --> https://react-chartjs-2.js.org/ ---> npm install --save chart.js react-chartjs-2 --> age gir kard joda joda nasb kun oon --save ro ham nazar
react chartjs to sitesh example ham dare ke azash use kun --> masalan ino negah kun ---> https://react-chartjs-2.js.org/examples/line-chart


do ta state e data va option ro besaz va typeshoon ro ham bede ama typeshoon chie?--> ino bekhoon https://react-chartjs-2.js.org/faq/typescript/
dar nahayat miresi be inke ino import 2 ta type ro import kuni ---> import type { ChartData, ChartOptions } from 'chart.js';
zemnan in do generic type hastan chun dar doc gofte  bayad benvisi masalan 'line' :
interface LineProps {
  options: ChartOptions<'line'>;
  data: ChartData<'line'>;
}

be gheyre 'line' chizaye dg e ham dar doc hast


dar site https://www.coingecko.com/en/api/documentation  --> ctrl+f bezan historical ro search kun ta data historical ro az API begir --> dovomi ro begir

bitcoin , usd , 30 , daily ro bede be api bebin chi mide ---> ye time stamp mide va some price
url ro copy kun va azash dar App.tsx use kun
'https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30&interval=daily'
alabte deghat kun in male bitcoin hast ama bayad jaye bitcoin dar url bala ino bezari ---> ${} --> what ever you are gonna select
IMPRORTANT ---> bayad az back tick yani `` use kuni ta betooni oon to chiz bezari yani mishe in: yani ${c?.id} --> yani harchi select shode chun oon to const c tarif kardi
`https://api.coingecko.com/api/v3/coins/${c?.id}/market_chart?vs_currency=usd&days=30&interval=daily`


in ja tailwind ro nasb nakardim


chejoori timestamp value ro convert kunim be more readable dates kunim ? ravesh ziade vali az package e moment use mikunim ke tabdil kunim nice formatted dates ijad kunim
npm install moment
import moment from 'moment' yadet nare dar App.tsx

hala jaye inke return price[0]; kuni ke faghat time stamp ro return mikune bia ino return kun:
return moment.unix(price[0]/1000).format("MM-DD"); // chera taghsim bar 1000 ? chun time stamp milisecond mide vali func e unix na pas taghsim bar 1000 mikunim va bad convert mikunim
MM --> 2 digit month like 06
DD ---> 2 digits days like 14
-------------------------------------------
How to change the how much data to be displayed ---> like 7 days or 1 day or ...
select and option for 30-7-1 day ro ezaf kun ---> hala functionlity bezar ---> mitoni network ro check kuni va ye bar ham dar UI currency ro avaz kuni va akharin request ro dar netwerk bebini va url ro bebini ke tosh 30 dare va modifyesh kuni jaye 30 bezari 7 masalan
ye hamchin chizi hast ---> Request URL: https://api.coingecko.com/api/v3/coins/dogecoin/market_chart?vs_currency=usd&days=30&interval=daily


nokte mohem --> alan dar select option jadid axios.get mikuni 
va url et ham ine masalan ---> axios.get(`https://api.coingecko.com/api/v3/coins/${c?.id}/market_chart?vs_currency=usd&days=30&interval=daily`)
alan chejoori {c?.id} anjam beshe ? chun dar onChange e bala in ro dar const c gozashte bodim ama dar paeen ke be bala dastrasinadarim pas che kunim? ye rah use kardan az state hast!
va az tarafi dar paeen ke masalan set kardi 7 days bala ham bayad taghir kune pas in addad haro ham vasash state tarif kun
switching between state and event alan ye name complex shode pas behtare vase consistency ham ke shode az state vase hamechi use kunim
va kafie ke vaghti drop down ro change kardi faghat state ro update kuni va ye function define kuni vase any of those changes va az name e on function dar event handlers use kuni
ravesh proper ham vaghti ke mikhay ye function e ro invoke kuni zamani ke state change rokh mide useEffect hast
pas useeffect with a dependecy array of those state variables ro use kun dar App.tsx


alabte deghat kuni masalan 7 days ro mizani graph 8 ta noghte yani 8 ta roz ro mide va hamintoor pas inja ro dorost benvis:
                          <option value='29'>30 Days</option>
                          <option value='6'>7 Days</option> 
                          <option value='1'>1 Day</option>
alabte man dast nazadam --> alabte string ro besorate number taghir dadim ke int bede jaye string
zemnan vase 1 days ham interval ro hourly kun: az ternary to link use mikunim --> havaset bashe space e ezafe nazari ye vaght
`https://api.coingecko.com/api/v3/coins/${selected?.id}/market_chart?vs_currency=usd&days=${range}&${range===1 ? 'interval=hourly' : 'interval=daily'}`
format ro ham taghir bede ke hour beshe ne MM-DD-YYYY
return moment.unix(price[0]/1000).format(range===1 ? "HH:MM" : "MM-DD-YYYY"); // two digit month like 06 and two digit days like 15


updating the title
bayad setOption kuni ama toye deafult option haye bala inkaro nakun chun az chart js ke faghat vse line chart nemikhaym use kunim pas bezar in default bemone va paeen tar setOption kun  

-----------------------------------------------
small crypto currency portfolio calculator
add kuni chanda crypto multply by the amount by the price and give a total portfolio value
pas vaghti select mikuni bayad bere to ye listi 
pas dar App.tsx ke const[selected , setSelected] = useState<Crypto | null>(); dari hala array toresh kun injoori:
const[selected , setSelected] = useState<Crypto[]>([]); //default esh ham mikunim be empty array chun dar khate [...selected,c] gir mide age nazari --> null ro ham bayad bardari
-------------------------------------------------

aggregate datas together to get total portfolio 
nested objects and aggregating data across those objects--> map and reduce
deghat kuni ba ye seri component saro kar darim ke ye state dakhel har kodumeshoon hast ke mikhaym ona ro sum kunim?
bayad ye joori state in component haro move up kunim be samte parent eshoon
baraye in kar bayad az parent ye function pass down kuni ke ye state dar parent ro dar child, set kuni
va prop ro dar child begir
zemnan deghat kun typescript hast pas bayad har func e expect mikuni ro dar type benvisi


zeman dar UI age chizi vared nakuni NaN neshoon mide ke inam fix kun ---> age khali bod don't display beshe!
dar cryptosummary.tsx ye state be name e amount hast 


vase total amount mishe az state dar App.tsx use kard ya ye property be crypto object ezafe kard ke keep track kune 
ma ravesh dovom yani ro use mikunim 
ye property ba name e owned ba type a number ijad mikunim
pas mirim dar Types.tsx in property ro ezaf mikunim
albate alan deghat kuni dar App.tsx age console.log(selected) kuni owned oon too nist
bayad ye copy az oon object e selected begiri va bad owned ro behesh ezaf kuni
oon object e ke mikhay grab kuni ro az id use kun ta peydash kuni
va kholase update esh kun ke owned ro dashte bashe va bad set esh kun be existing state


vase sum kardan hame az reduce use mikunim
jaye inke ino return kuni ---> return  <p>{s.current_price * s.owned}</p>
benvis:
....
.reduce((prev , current)=>{return prev+current;},0)  --> 0 starting value hast
zemnan return ke mikuni mire toye prev zakhire mishe va dobare miad to
